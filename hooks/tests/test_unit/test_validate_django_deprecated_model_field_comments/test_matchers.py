from __future__ import annotations

import textwrap

import libcst as cst
import pytest
from libcst.matchers import matches

from hooks.tests.test_unit.test_validate_django_deprecated_model_field_comments.conftest import (
    MULTI_LINE_ANNOTATED_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS,
    MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS,
    MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENT,
    MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENTS,
    MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT,
    MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS,
    MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITHOUT_COMMENTS,
    MULTI_LINE_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS,
    MULTI_LINE_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS,
    MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENT,
    MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENTS,
    MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT,
    MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS,
    MULTI_LINE_FOREIGN_KEY_WITHOUT_COMMENTS,
    ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENT,
    ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENTS,
    ONE_LINE_ANNOTATED_FIELD_WITHOUT_COMMENTS,
    ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT,
    ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS,
    ONE_LINE_FIELD_WITH_TRAILING_COMMENT,
    ONE_LINE_FIELD_WITH_TRAILING_COMMENTS,
    ONE_LINE_FIELD_WITHOUT_COMMENTS,
    ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT,
    ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS,
)
from hooks.validate_django_deprecated_model_field_comments import (
    _django_model_field_with_leading_comment,
    _django_model_field_with_trailing_comment,
    django_model_field_with_comments,
)


@pytest.mark.parametrize(
    ('source', 'expected_result'),
    [
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENT, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENT, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENTS, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT, False),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT, False),
        (MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS, False),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS, False),
        (MULTI_LINE_FOREIGN_KEY_WITHOUT_COMMENTS, False),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITHOUT_COMMENTS, False),
        (ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT, False),
        (ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT, False),
        (ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS, False),
        (ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS, False),
        (ONE_LINE_FIELD_WITHOUT_COMMENTS, False),
        (ONE_LINE_ANNOTATED_FIELD_WITHOUT_COMMENTS, False),
        (ONE_LINE_FIELD_WITH_TRAILING_COMMENT, False),
        (ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENT, False),
        (ONE_LINE_FIELD_WITH_TRAILING_COMMENTS, False),
        (ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENTS, False),
    ],
)
def test_django_model_field_with_leading_comment(source, expected_result):
    node = cst.parse_statement(textwrap.dedent(source))

    assert matches(node, matcher=_django_model_field_with_leading_comment) == expected_result


@pytest.mark.parametrize(
    ('source', 'expected_result'),
    [
        (MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (ONE_LINE_FIELD_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_FIELD_WITH_TRAILING_COMMENTS, True),
        (ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENTS, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENT, False),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENT, False),
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENTS, False),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENTS, False),
        (MULTI_LINE_FOREIGN_KEY_WITHOUT_COMMENTS, False),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITHOUT_COMMENTS, False),
        (ONE_LINE_FIELD_WITHOUT_COMMENTS, False),
        (ONE_LINE_ANNOTATED_FIELD_WITHOUT_COMMENTS, False),
    ],
)
def test_django_model_field_with_trailing_comment(source, expected_result):
    node = cst.parse_statement(textwrap.dedent(source))

    assert matches(node, matcher=_django_model_field_with_trailing_comment) == expected_result


@pytest.mark.parametrize(
    ('source', 'expected_result'),
    [
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENT, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENT, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_COMMENTS, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (MULTI_LINE_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (MULTI_LINE_ANNOTATED_FIELD_WITH_LEADING_AND_TRAILING_COMMENTS, True),
        (ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (ONE_LINE_ANNOTATED_FOREIGN_KEY_WITH_TRAILING_COMMENTS, True),
        (ONE_LINE_FIELD_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENT, True),
        (ONE_LINE_FIELD_WITH_TRAILING_COMMENTS, True),
        (ONE_LINE_ANNOTATED_FIELD_WITH_TRAILING_COMMENTS, True),
        (MULTI_LINE_FOREIGN_KEY_WITHOUT_COMMENTS, False),
        (MULTI_LINE_ANNOTATED_FOREIGN_KEY_WITHOUT_COMMENTS, False),
        (ONE_LINE_FIELD_WITHOUT_COMMENTS, False),
        (ONE_LINE_ANNOTATED_FIELD_WITHOUT_COMMENTS, False),
    ],
)
def test_django_model_field_with_comments(source, expected_result):
    node = cst.parse_statement(textwrap.dedent(source))

    assert matches(node, matcher=django_model_field_with_comments) == expected_result
